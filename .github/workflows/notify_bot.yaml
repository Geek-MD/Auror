name: Notify Telegram Bot on File Changes

on:
  push:
    paths:
      - 'html/**'          # Detecta cambios en archivos HTML
      - 'locales/**'       # Detecta cambios en archivos de idiomas
      - 'html/hreflang_links.yaml'  # Detecta cambios en el archivo YAML de URLs

jobs:
  notify_telegram:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Identify changed files
      id: changed_files
      run: |
        CHANGED_FILES=$(git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.sha }} | grep '^html/.*\.html$' || true)
        echo "Changed files: $CHANGED_FILES"
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "No new or modified HTML files detected."
          echo "notify=false" >> $GITHUB_ENV
        else
          echo "Detected changes in HTML files."
          echo "notify=true" >> $GITHUB_ENV
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_ENV
        fi

    - name: Notify Telegram Bot
      if: env.notify == 'true'
      run: |
        # Formatea los nombres de los archivos para enviarlos como par√°metro al bot
        FILES=$(echo "${{ env.changed_files }}" | tr '\n' ',' | sed 's/,$//')
        echo "Files to notify: $FILES"

        # URL de la API de Telegram
        TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
        CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
        COMMAND="/scrape_files $FILES"

        # Enviar comando al bot
        curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
          -H "Content-Type: application/json" \
          -d "{\"chat_id\": \"$CHAT_ID\", \"text\": \"$COMMAND\"}"
